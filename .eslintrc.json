{
  "env": {
    "browser": true,
    "es2022": true,
    "node": true,
    "jest": true
  },
  "ignorePatterns": [
    "**/*.spec.ts"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "extraFileExtensions": ".md"
  },
  "plugins": [
    "eslint-plugin-import",
    "@angular-eslint/eslint-plugin",
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/typescript"
  ],
  "rules": {
    "@angular-eslint/directive-selector": [
      "error",
      {
        "type": "attribute",
        "prefix": "app",
        "style": "camelCase"
      }
    ],
    "@angular-eslint/component-selector": [
      "error",
      {
        "type": [
          "element",
          "attribute"
        ],
        "prefix": [
          "app", // it will removed later
          "fscc",
          "shared",
          "entity",
          "core",
          "auth"
        ],
        "style": "kebab-case"
      }
    ],
    "@angular-eslint/component-class-suffix": "error",
    "@angular-eslint/directive-class-suffix": "error",
    "@angular-eslint/no-input-rename": "error",
    // "@angular-eslint/no-output-on-prefix": "error",
    "@angular-eslint/no-output-rename": "error",
    "@angular-eslint/use-pipe-transform-interface": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "args": "all",
        "caughtErrors": "none",
        "caughtErrorsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-explicit-any": "error", // no any type
    "@typescript-eslint/consistent-type-definitions": "error",
    // "@typescript-eslint/prefer-const": "error",
    "@typescript-eslint/dot-notation": "off",
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-expect-error": "allow-with-description",
        "ts-ignore": "allow-with-description",
        "ts-nocheck": true,
        "ts-check": false
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": [
      "off",
      {
        "accessibility": "explicit"
      }
    ],
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase"
        ]
      },
      {
        "selector": "function",
        "format": [
          "camelCase",
          "PascalCase"
        ]
      },
      {
        "selector": "class",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ]
        // prefix: ['I'],
      },
      {
        "selector": "enum",
        "format": [
          "UPPER_CASE"
        ]
        // suffix: ['Types'],
      },
      {
        "selector": "typeAlias",
        "format": [
          "PascalCase"
        ]
      }
    ],
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-inferrable-types": [
      "error",
      {
        "ignoreParameters": true
      }
    ],
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/prefer-function-type": "error",
    // "@typescript-eslint/quotes": "error",
    "@typescript-eslint/no-floating-promises": [
      "error",
      {
        "ignoreVoid": true
      }
    ],
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/no-redeclare": [
      "error",
      {
        "ignoreDeclarationMerge": true
      }
    ],
    "@typescript-eslint/no-shadow": "error", // same name for different variables
    "@typescript-eslint/unified-signatures": "error",
    "arrow-body-style": "error",
    "constructor-super": "error",
    "eqeqeq": [
      "error",
      "smart"
    ],
    "guard-for-in": "error",
    "id-blacklist": "off",
    "id-match": "off",
    "import/no-deprecated": "warn",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-console": [
      "error",
      {
        "allow": [
          "log",
          "dirxml",
          "warn",
          "error",
          "dir",
          "timeLog",
          "assert",
          "clear",
          "count",
          "countReset",
          "group",
          "groupCollapsed",
          "groupEnd",
          "table",
          "Console",
          "markTimeline",
          "profile",
          "profileEnd",
          "timeline",
          "timelineEnd",
          "timeStamp",
          "context"
        ]
      }
    ],
    "complexity": [
      "warn",
      12
    ],
    "no-empty": "off",
    "no-eval": "error",
    "no-fallthrough": "error",
    "no-new-wrappers": "error",
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          "rxjs/Rx"
        ],
        "patterns": [
          "rxjs/(?!operators|testing)"
        ]
      }
    ],
    "no-shadow": [
      "off"
    ],
    "no-throw-literal": "error",
    "no-undef-init": "error",
    "no-underscore-dangle": "off",
    "no-unused-labels": "error",
    "no-var": "error",
    "prefer-const": "error",
    "radix": "error",
    "spaced-comment": [
      "error",
      "always",
      {
        "markers": [
          "/"
        ]
      }
    ],
    "indent": "off"
  },
  "overrides": [
    {
      "files": [
        "src/app/shared/**/*.ts"
      ],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": [
              "element",
              "attribute"
            ],
            "prefix": "app-shared",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "appShared",
            "style": "camelCase"
          }
        ]
      }
    }
    // Add more overrides for other modules if needed
  ]
}